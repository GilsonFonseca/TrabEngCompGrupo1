package fronteira;

import entidade.Usuario;
import java.util.ArrayList;
import javax.swing.DefaultCellEditor;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.event.InternalFrameEvent;
import javax.swing.event.InternalFrameListener;
import javax.swing.table.DefaultTableModel;
import persistencia.PerUsuario;

/**
 * Janela referente a tabela dos usuários cadastrados
 * 
 */

public class Relatorio_Usuario extends javax.swing.JInternalFrame {
        //metodo para prencher a tabela
    private void preencherTabela(){
        //primeiramente preenche a tabela na coluna carros com default (esses dados ainda não são de interesse)
        table.getColumn("Carros").setCellEditor(new DefaultCellEditor(new JComboBox()));
        ((DefaultTableModel)table.getModel()).setRowCount(0);
        //com os dados dos usuários prenche o resto da tabela
        ArrayList <Usuario> users=PerUsuario.consultar();
        for(Usuario usuario : users){
            Object[] linha = {usuario.getID(),usuario.getNome(),usuario.getCPF()};
            ((DefaultTableModel)table.getModel()).insertRow(table.getModel().getRowCount(),linha);           
        }
        //fornece o cursor só se necessário
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
    }
    
    //construtor com a geração da janela
    public Relatorio_Usuario(final Main father) {
        initComponents();
        this.father = father;
        setClosable(true);
        //cria-se a estrutura
        this.addInternalFrameListener(new InternalFrameListener() {

            @Override
            public void internalFrameOpened(InternalFrameEvent e) {                
                preencherTabela();
                setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
            }

            @Override
            public void internalFrameClosing(InternalFrameEvent e) {
                father.relatorio_usuario = false; 
                dispose();
            }

            @Override
            public void internalFrameClosed(InternalFrameEvent e) {
                
            }

            @Override
            public void internalFrameIconified(InternalFrameEvent e) {

            }

            @Override
            public void internalFrameDeiconified(InternalFrameEvent e) {

            }

            @Override
            public void internalFrameActivated(InternalFrameEvent e) {

            }

            @Override
            public void internalFrameDeactivated(InternalFrameEvent e) {

            }
        });
    }

    /**
     * Gerado automaticamente pela interface
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        JComboBox combo = new JComboBox(new String[]{"<PlaceHolder>","<PlaceHolder>"});
        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null}
            },
            new String [] {
                "ID", "Nome", "CPF", "Carros"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        table.getColumnModel().getColumn(3).setCellEditor(new DefaultCellEditor(combo));
        //combo.setSelectedItem("<PlaceHolder>");
        table.setColumnSelectionAllowed(true);
        table.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(table);
        table.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        if (table.getColumnModel().getColumnCount() > 0) {
            table.getColumnModel().getColumn(0).setResizable(false);
            table.getColumnModel().getColumn(1).setResizable(false);
            table.getColumnModel().getColumn(2).setResizable(false);
            table.getColumnModel().getColumn(3).setResizable(false);
        }

        jButton1.setText("Atualizar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Excluir");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Alterar");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 420, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton2)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2)
                    .addComponent(jButton3))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
    int s = table.getSelectedRow();
    if(s!=-1){
        setCursor(new java.awt.Cursor(java.awt.Cursor.WAIT_CURSOR));
        if(PerUsuario.excluir((Integer)table.getValueAt(table.getSelectedRow(), 0))){
            JOptionPane.showMessageDialog(rootPane, " Usuário deletado com sucesso!", "CarBill - Protype 1", JOptionPane.INFORMATION_MESSAGE);
            preencherTabela();
        }else{
            JOptionPane.showMessageDialog(rootPane, " Erro ao deletar!", "CarBill - Protype 1", JOptionPane.ERROR_MESSAGE);            
        }
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
    }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
    int s = table.getSelectedRow();
    if(s!=-1){
        setCursor(new java.awt.Cursor(java.awt.Cursor.WAIT_CURSOR));
        Usuario usr = new Usuario();
        usr.setID((Integer)table.getValueAt(table.getSelectedRow(), 0));
        usr.setNome((String)table.getValueAt(table.getSelectedRow(), 1));
        usr.setCPF((String)table.getValueAt(table.getSelectedRow(), 2));
        usr.setSenha("<PlaceHolder>");        
        if(PerUsuario.alterar(usr)){
            JOptionPane.showMessageDialog(rootPane, " Usuário alterado com sucesso!", "CarBill - Protype 1", JOptionPane.INFORMATION_MESSAGE);
            preencherTabela();            
        }else{
            JOptionPane.showMessageDialog(rootPane, " Erro ao alterar!", "CarBill - Protype 1", JOptionPane.ERROR_MESSAGE);             
        }
        //preencherTabela();
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
    }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
    setCursor(new java.awt.Cursor(java.awt.Cursor.WAIT_CURSOR));
    preencherTabela();
    setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
    }//GEN-LAST:event_jButton1ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable table;
    // End of variables declaration//GEN-END:variables
    final Main father;
}
